// Типы данных (Маалымат турлору)
//1 - Undefined (Неопределенный тип) (Белгисиз)
//2 - Boolean (Булевой логический тип, true (чындык) жана false (жалган))
//3 - Number (Число(сандар: 1236 454,343))
//4 - String (Строка - "",'',`` "text")
//5 - Bigint чон сандар менен иштегенге жардам берет (112324243253463464577767112)
//6 - Symbol (Символ $,+,-*,/,#)
//7 - Noll (Hе существует, жок нерсе)
//8 - Object (Обьект) - {}

// Lesson 1 number + переменные

// Number Числовой тип данных. Сандар (12,34,56,67). Эгерде жонокой сандарды жазган болсок
// Javascript вни автоматтык турдо аны типы данныйы (маалымат турлору бовича) аны пивђег деп кабыл алат.

// Переменные Хаваскриптин диви, класс названиясы деп тушунсок болот. Ал бизге
// Данныйларды (информацию) сактаганга жардам берет. Переменыйга озубуз калаган ат беребиз.
// Переменыйдын 3 туру бар. Алар:

// Let a = 12
// a = 9
// console.log(a)


// var - Эски переменый азыркы учурда ушул переменыйды колдонсок бизге
// бардыгы ( ошибка, каталарды) чыгарып берет.
// let - жаны переменый, манисин,значениясын,озгорто алабыз
// const - Constanta дегенден келип чыккан. бул переменыйдын значениясын озгорто алайбыз.

// Операторлор

// + - кошу (плюс)
// - кемиту (минус)
// * кобойту (умножение)
// / болу (деление)
// % болунун калдыгы (остаток от деления)

// let a = 23
// console.log(a)

// let a = 12
// let b = 5
// console.log(a + b)

// let a = 20
// let b = 10
// console.log(a - b)

// let a = 15
// let b = 4
// let result a + b
// console.log(result)

// let a = 23
// let b = 34
// let c = 12
// console.log(a * b * c)

// let a = 15
// let b = 3
// let result = a / b
// console.log(result)

// 1. Вам дана переменная num, присвойте ей значение. Выведите значение
// этой переменной в консоль.

//let num = 10
//console.log(num)

// 2. Вам даны переменные a=10, b=2 и c=5. Выведите в консоль их сумму.
//let a = 10
//let b =2
//let c = 5
//let result = a + b + c
//console.log(result)
// 3. Вам дана переменная со значением 100, выведите в консоль умноженную переменную на 2.
//let result = 100
//console.log(result * 2)
// 4. Вам дана переменная со значением 67. Выведите в консоль остаток деления на 7.
// let number = 67
// console.log(number % 7)
// 5. Вам даны переменные a=10 и b=2. Выведите в консоль их сумму, разность,
// произведение и частное (результат деления).
// let a = 10
// let b = 2
// let c =a + b
// console.log(c / c)

// 6. Вам даны переменные c=15 и d=2. Просуммируйте их, а результат присвойте
// переменной result. Выведите в консоль значение переменной result.
// let a = 15
// let b = 2
// let result = a + b
// console.log(result)
// 7. Вам даны переменные a=30, и b=15 Сложите переменные a и b и результат
// присвойте переменной c. Затем выведите в консоль остаток деления на 4 переменной c.
//let a = 30
//let b = 15
//let c = a + b
//console.log(c % 4)
// 8. Вам даны переменные a=17 и b=10. Отнимите от a переменную b и результат
// присвойте переменной c. Затем создайте переменную d, присвойте ей значение.
// Сложите переменные c и d, а результат запишите в переменную result. Выведите
// в консоль значение переменной result.
//let a = 17
//let b = 10
//let c = a - b
//let d = 12
//let result = c + d
//console.log(result)
// 9. Вам даны a='10' и b='99'. Сложите переменные a и b и присвойте результат
// переменной result и выведите её в консоль.
//let a = 10
//let b = 99
//let result = a + b
//console.log(result)
// 10. Вам даны переменные name='Аскар', number=10. Сложите данные переменные,
// присвойте результат переменной result и выведите её в консоль.
//let name = 'Аскар'
//let number = 10
//let result = number + name
//console.log(result)


//String - текстовой тип данных текст написаный внутри обычных скобок
//String считается текстовым видом данных
//У кавычек есть 3 типа это:
// 1 - "" - двойные ковычки
// 2 - '' - одиночные ковычки
// 3 - `` - перевернутые ковычки
// Если внутри ковычек будет написана цифра то она будет считаться типом данных string
// бул дагы типы данный боюнча string болуп саналат. ("21", "42", "12" = "string").
// String тин ар кандай кызмат аткарган коп методдору бар.
// Алар: length, toUpperCase(), toLowerCase(), slice(), split ж.б.

// Жаваскрипте мындай эреже бар. Эгерде переменныйга 2 же андан ашык создон куралган
// ат (название) бере турган болсок анда
// сamellCase -(Верблюжая нотация, тоо кейпиндеги жазылыш) турундо жазабыз.
// Создун биринчи тамгасы баш тамга мн жазылат. Мисалы:
// itAcademy, setNumberOffBlock, heroGeneral, toLowerCase, toUpperCase,
// blockOne ж.б.

// Меттоддору

// length - Узундугун санап берет.
// toUpperCase() - Верхний регистр (чон тамга: Мисалы: "DANIEL")
// toLowerCase() - Нижни ркгистр (кичине тамга: Мисалы: "daniel"
// slice() - Санап туруп кесип, болуп берет.

// let str = "Sport"
// console.log(str)

// length - 1 ден баштап эсептейт.
// индекс - 0 дон баштап эсептейт.

// let str = "Sport"
// console.log(str.length)

// let str = "sport"
// console.log(str.toUpperCase())

// let str = "DANIEL"
// console.log(str.toLowerCase())

// let str = "Mentor"
// console.log(str.slice(0,1))

// let str = "Idev It Academy"
// console.log(str.slice(0,5))

// let strOne = "Idev"
// let strTwo = "It"
// let strThree = "Academy"
// let result = strOne + strTwo + strThree
// console.log(result)


// let str = "World"
// console.log(Hello ${str})

// ${} - интерпаляция чакырып берет.

//Строки:
//1. Вам дана переменная str, присвойте ей значение 'Привет, Мир!'. Выведите значение этой переменной в консоль.
// let str = 'Привет, Мир!'
// console.log(str)
//2.Вам даны переменные str1='Привет, ' и str2='Мир!'. С помощью этих переменных и операции сложения строк выведите в консоль фразу 'Привет, Мир!'.
// let str1 = 'Привет,'
// let str2 = 'Мир!'
// let result = str1 + str2
// console.log(result)
//3.Вам дана переменная name, присвойте ей ваше имя. Выведите в консоль фразу 'Привет, *Имя*!'.
// let str = 'Даниэль'
// console.log(`'Привет, ${str}`)
//4.Вам дана переменная age , присвойте ей ваш возраст. Выведите в консоль 'Мне *Возраст* лет!'.
//let age = 16;
//console.log(`Мне ${age} лет!`);
//5.Вам даны четыре переменные.
//Первая - для хранения количества дней. Присвойте ей значение "365".
//Вторая - для хранения названия нашей планеты "Земля".
//Третья - для хранения примерного количества жителей нашей планеты. Присвойте ей значение "7 млрд.".
//Четвертая - для хранения слова "Солнце".
//Далее, используя текст и переменные, нужно вывести в консоль такой абзац:
//"В нашем году 365 дней. Днём у нас светит Солнце. Население планеты Земля составляет примерно 7 млрд. человек."
//let daysInYear = 365;
//let planetName = "Земля";
//let population = "7 млрд.";
//let sun = "Солнце";

//console.log( `В нашем году ${daysInYear} дней Днём у нас светит ${sun} Население планеты ${planetName} составляет примерно ${population}  человек.`);

// Boolean - бул логический тип выражения. бул типы даныыйда условие менен
// иштейт. сайтка логика жазылат. Boolean 2 нерсеси кабыл алат.
// булар - true жана false бул тып даныйда if() жана else {} мн шарт тузулот.
// if() - (ecли, эгерде), else {} - (иначе, андай болбосо)
// Шарт бизге берилген тапшырмага жана тапшырманын коптугуно жараша
// шарт тузуло берет. if () жана else {} ден тышкары 3чу кошумча шарт бар.
// Ал else if () болуп эсептелет. (андай дагы болбосо).
//
// Операторлор.
//
// + - кошуу
// - кемитуу
// / - болуу
// * - кобойтуу
// % - остаток от деление
// = равно
// === - строго равно
// != - не равно
//  !== строго не равно
// && - Логичесский И (жана)
// || - Логичесский ИЛИ (же болбосо)
// typeof - Кайсы тип данный экенин аныктап берет.
// ? : - тернарный оператор
// ++ - инкремент
// -- декремент
//  > (больше)
//  < (меньше)
//  >= (больше или равно)
//   <= (меньше или равно)
//  ! (логическое НЕ)
//  = (присваивание значения)
// += (сложение с присваиванием)
// -= (вычитание с присваиванием)
//  *= (умножение с присваиванием)
//  /= (деление с присваиванием)
//  %= (остаток от деления с присваиванием)
//
// let a = 10
// if (a === 10) {
//console.log("true")
//  } else {
//console.log("false")
// }
//
// let a = 9
// let b = 5
// if (a > b) {
//     console.log("true")
// } else {
// //     console.log("false")
// // }
//
// // let a = 50
// // if (a > 40) {
// //     console.log("true")
// // } else if (a === 50) {
// //     console.log("ravno")
// // } else {
// //     console.log("false")
// // }
//
// // 1. Вам дана переменная a. Если переменная a равна 10, то выведите 'Верно',
// // иначе выведите 'Неверно'.
//
// // let a = 10
// // if (a === 10) {
// //     console.log('Верно')
// // } else {
// //     console.log('Неверно')
// // }
//
// // 2. Вам даны две переменные a=50, b=100. Составьте условие,
// // по которому в консоль будет выводиться 'a больше b', 'a меньше b'.
//
// // let a = 50
// // let b = 100
// // if (a > b) {
// //     console.log('a больше b')
// // } else {
// //     console.log('a меньше b')
// // }
//
// // 3. Вам дана переменная a=-2. Составьте условие, по которому в
// // консоль будет выводиться 'positive' - если число больше 0,
// // 'равно' если число равно 0, "negative" если число меньше 0.
// let a = -2
// if (a > 0) {
//     console.log('positive')
// } else if (a === 0) {
//     console.log('равно')
// } else {
//     console.log('negative')
// }
// // 4. Вам дана переменная number=45. Составьте условие,
// // по которому будет выводиться в консоль "Четное число", "Нечетное число".
// let number = 45;
// if (number % 2 === 0) {
//     console.log('Четное число');
// } else {
//     console.log('Нечетное число');
// }
// // 5. Вам даны две переменные a=10, b=2. Составьте условие,
// // по которому, остаток деления a на b, будет выводиться консоль
// // "Четное число", "Нечетное число".
// let a = 10
// let b = 2
// if ( a % b === 0) {
//     console.log('Четное число')
// } else {
//     console.log('Нечетное число')
// }
// // 6. Вам дана переменная s. Составьте условие, по которому в
// консоль будет выводится тип этой переменной - "boolean", "number", "string".
// let s = "привет"
// if (typeof s === 'boolean'){
//     console.log('boolean')
// } else if (typeof s === 'number'){
//     console.log('number')
// }  if (typeof s === "string"){
//     console.log('string')
//}
//  7. Вам дана переменная а. Если переменная a больше
//  одного и меньше 9-ти, то выведите 'Верно', иначе выведите 'Неверно'.
// let a = 5;
// if (a > 1 && a < 9) {
//     console.log('Верно');
// } else {
//     console.log('Неверно')
// }
// 8. Вам дана переменная а. Если переменная a равна
// // трем или равна семи, то прибавьте к ней 7, иначе поделите
// // ее на 10. Выведите новое значение переменной в консоль.
// let a = 3
// if (a === 3 || a === 7) {
//     console.log(a + 7)
// }
// else {
//     console.log( a / 10)
// }
// console.log(a);
// 9. Вам даны переменные а , b. Если переменная a равна
// или меньше 0, а переменная b больше или равна 5, то
// выведите сумму этих переменных, иначе выведите их разность (результат вычитания).
// let a = 0
// let b = 5
// if (a === 0 || a < 0) {
//     console.log(a + b)
// } else if (b > 5 || b === 5) {
//     console.log(a + b)
// } else {
//     console.log(a - b )
// }

// // 10. Вам даны переменные a , b. Если переменная a больше
// // 4-х и меньше 10-ти, или переменная b больше или равна
// 7-ми и меньше 17-ти, то выведите 'Верно', в противном случае выведите 'Неве
// let a = 7
// let b = 10
// if (a > 4 && a < 10 ) {
//     console.log('Верно')
// } else if (b > 7 || b === 7 && b < 17 ) {
//     console.log('Верно')
// } else {
//     console.log('Неверно')
// }


// function

// function - Функция бул блоктук код болуп эсептелет. Сайттагы ар кандай тасктар,
// тапшырмалар, логикалар функциянын ичине жазылат. Функция бизге сайттарга логика жазып
// иштетип, сайттын интерактивдуулугуно салым кошот. return - Функциянын ичинде логиканы кайтарып берет.
// Функциянын параметрлери болот. Параметрлер коп болушу мумукун (a,b,c,d ж.б).
// console.log() дон параметрге аргумент беребиз.
// function num (a,b) {} return a + b
// console.log(45,35) a === 45, b === 35.

// JavaScript функциясы - бул белгилүү бир тапшырманы аткаруу үчүн иштелип чыккан код блогу.
// Негизи JavaScript функциялары башка программалоо тилдериндеги процедуралар же подпрограммалар сыяктуу эле.
// JavaScript функциясы ага "бир нерсе" киргенде гана аткарылат (аны чакырат).
// Көп учурда биз программанын көптөгөн бөлүктөрүндө бир эле аракетти кайталашыбыз керек.
// Мисалы, конок менен учурашканда, конок сайттан чыгып кеткенде же башка жерде билдирүүнү кооз көрсөтүү керек.
// Көп жерлерде бир эле код кайталанбашы үчүн функциялар ойлоп табылган.
// Функциялар программанын негизги "курулуш материалы" болуп саналат.

// Функциянын турлору

// function declaration
// function expression
// callback () =>
// arrow function
// anonumous function
// IIFE - Immediate invoked function expression


// function num (a,b) {
//     return a + b
// }
// console.log(num(35,45))

// function num (a) {
//     if (a > 10) {
//         return "true"
//     } else {
//         return "false"
//     }
// }
// console.log(num(25))

// function sum (a,b) {
//     if (a > b) {
//         return a + b
//     } else {
//         return a - b
//     }
// }
// console.log(sum(10,5))

// 1. Вам дана переменная a. Если переменная a равна 10, то выведите 'Верно',
// иначе выведите 'Неверно'.
// function num (a) {
//     if (a === 10) {
//         return ('Верно')
//     } else {
//         return ('Неверно')
//     }
// }
// console.log(num(10))
// 2. Вам даны две переменные a=50, b=100. Составьте условие,
// по которому в консоль будет выводиться 'a больше b', 'a меньше b'.
// function dif(a,b) {
//     if (a > b) {
//         return ('a больше b')
//     } else {
//         return ('a меньше b')
//     }
// }
// console.log(dif(50, 100))
// 3. Вам дана переменная a=-2. Составьте условие, по которому в
// консоль будет выводиться 'positive' - если число больше 0,
// 'равно' если число равно 0, "negative" если число меньше 0.
//  function div(a) {
//     if (a > 0) {
//         return ('positive')
//     }else if (a === 0) {
//             return ('равно')
//      } else {
//          return ('negative')
//      }
//  }
//  console.log(div(-2))
// 4. Вам дана переменная number=45. Составьте условие,
// по которому будет выводиться в консоль "Четное число", "Нечетное число".
// function git (number) {
//     if (number % 2 === 0) {
//         return ('Четное число')
//     } else {
//         return('Нечетное число')
//     }
// }
// console.log(git(45))
// 5. Вам даны две переменные a=10, b=2. Составьте условие,
// по которому, остаток деления a на b, будет выводиться консоль
// "Четное число", "Нечетное число".
// function bit (a,b) {
//     if (a % b === 0) {
//         return ('Четное число')
//     } else {
//         return('Нечетное число')
//     }
// }
// console.log(bit(10,2))
// 6. Вам дана переменная s. Составьте условие, по которому в
// консоль будет выводится тип этой переменной - "boolean", "number", "string".
// function dit (s) {
//     if (typeof s === "boolean") {
//         return ("boolean")
//     } else if (typeof s === "number") {
//         return ("number")
//     } else if(typeof s === "string")
//     {
//         return ("string")
//     }
// }
// console.log(dit(21))
// 7. Вам дана переменная а. Если переменная a больше
// одного и меньше 9-ти, то выведите 'Верно', иначе выведите 'Неверно'.
// function kid(a) {
//     if (a > 1 && a < 9) {
//         return ('верно')
//     } else {
//         return ('неверно')
//     }
// }
// console.log(kid(5))
// 8. Вам дана переменная а. Если переменная a равна
// трем или равна семи, то прибавьте к ней 7, иначе поделите
// ее на 10. Выведите новое значение переменной в консоль.
// function bis(a) {
//     if (a === 3 || a === 7) {
//         return (a + 7)
//     } else {
//         return (a / 10)
//     }
// }
//  console.log(bis(7))
// 9. Вам даны переменные а , b. Если переменная a равна
// или меньше 0, а переменная b больше или равна 5, то
// выведите сумму этих переменных, иначе выведите их разность (результат вычитания).
//  function gad (a,b) {
//      if (a === 0 || a < 0) {
//          return(a + b)
//      } else if (b > 5 || b === 5) {
//          return(a + b)
//      } else {
//          return(a - b)
//      }
//  }
//  console.log(gad(0,5))
// 10. Вам даны переменные a , b. Если переменная a больше
// 4-х и меньше 10-ти, или переменная b больше или равна
// 7-ми и меньше 17-ти, то выведите 'Верно', в противном случае выведите 'Неверно'.
// function bad (a,b) {
//     if (a > 4 && a < 10) {
//         return ('верно')
//     } else if (b > 7 || b === 7 && b < 17 ) {
//         return ('верно')
//     } else {
//         return ('неверно')
//     }
// }
// console.log (bad(7,10))


// arrow function

// arrow function - стрелочная функция, Жонокой фйырмаланып ото чон логикаларды,
// узун колдорду стрелочная функция жардамы менен кыскартып жазууга болот,
// Ошол учун кобуно реактта дагы дал ушул стрелочная функцияны кобуроок колдонушат

// Жазылышы

// Жонокой функция (function)

// function sum (a,b) {
//     return a + b
// }
// console.log(sum(30,40))

// Cтрелочная фуекция (arrow function)

// const sum = (a,b) => {
//     return a + b
// }
// console.log(sum(30,40))


// const num = (a,b) => {
//     if(a > b) {
//         return "true"
//     } else {
//         return "false"
//     }
// }
// console.log(num(20,10))

// const num = (a,b) => {
//     if (a % 2 === 0) {
//         return a + b
//     } else if (a % 2 !== 0) {
//         return a + b
//     } else {
//         return a - b
//     }
// }
// console.log(num(20,10))

// const sum = (a) => {
//     if (a > 5) {
//         return "true"
//     } return "false"
// }
// console.log(sum(6))


// 1. Вам дана переменная a. Если переменная a равна 10, то выведите 'Верно',
// иначе выведите 'Неверно'.
//  const msu = (a) => {
//      if (a === 10) {
//          return "верно"
//      } return "неверно"
//   }
//  console.log(msu(7))
// 2. Вам даны две переменные a=50, b=100. Составьте условие,
// по которому в консоль будет выводиться 'a больше b', 'a меньше b'.
// const usm = (a , b) => {
//     if (a > b) {
//         return "a больше b"
//     } return "a меньше b"
// }
// console.log(usm(50 , 100))
// 3. Вам дана переменная a=-2. Составьте условие, по которому в
// консоль будет выводиться 'positive' - если число больше 0,
// 'равно' если число равно 0, "negative" если число меньше 0.
// const vid = (a) => {
//     if (a > 0) {
//         return ('positive')
//     } else if (a === 0) {
//         return ('равно')
//     } else {
//         return ('negative')
//     }
// }
// console.log(vid(-2))
// 4. Вам дана переменная number=45. Составьте условие,
// по которому будет выводиться в консоль "Четное число", "Нечетное число".
// const usa = (number) => {
//     if (number % 2 === 0) {
//         return ('Четное число')
//     } return  ('Нечетное число')
// }
// console.log(usa(45))
// 5. Вам даны две переменные a=10, b=2. Составьте условие,
// по которому, остаток деления a на b, будет выводиться консоль
// "Четное число", "Нечетное число".
// const rmd = (a , b) => {
//     if (a % b === 0) {
//         return ('Четное число')
//     } return ('Нечетное число')
// }
// console.log(rmd(10 , 2))
// 6. Вам дана переменная s. Составьте условие, по которому в
// консоль будет выводится тип этой переменной - "boolean", "number", "string".
// const amd = (s) => {
//     if (typeof s === "boolean") {
//         return ("boolean")
//     } else if (typeof s === "number") {
//         return ("number")
//     } else if (typeof s === "string") {
//         return ("string")
//     }
// }
// console.log(amd(191919))
// 7. Вам дана переменная а. Если переменная a больше
// одного и меньше 9-ти, то выведите 'Верно', иначе выведите 'Неверно'.
// const nvi = (a) => {
//     if (a > 1 && a < 9) {
//         return ('верно')
//         } else {
//        return ('неверно')
//     }
// }
// console.log(nvi(0))
// 8. Вам дана переменная а. Если переменная a равна
// трем или равна семи, то прибавьте к ней 7, иначе поделите
// ее на 10. Выведите новое значение переменной в консоль.
// const tim = (a) => {
//     if (a === 3 || a === 7) {
//         return (a + 7)
//     } else {
//         return ( a / 10)
//     }
// }
// console.log(tim(3))
// 9. Вам даны переменные а , b. Если переменная a равна
// или меньше 0, а переменная b больше или равна 5, то
// выведите сумму этих переменных, иначе выведите их разность (результат вычитания).
// const mid = (a,b) => {
//     if (a === 0 || a < 0 ) {
//         return (a + b)
//     } else if  (b > 5 || b === 5) {
//         return (a + b)
//     } else {
//         return (a - b)
//     }
// }
// console.log(mid(0 , 5))
// 10. Вам даны переменные a , b. Если переменная a больше
// 4-х и меньше 10-ти, или переменная b больше или равна
// 7-ми и меньше 17-ти, то выведите 'Верно', в противном случае выведите 'Неверно'.
// const aim = (a,b) => {
//    if (a > 4 && a < 10) {
//        return ('верно')
//    } else if (b === 7 || b > 7 && b < 17) {
//        return ('верно')
//    } else {
//        return ('неверно')
//    }
// }
// console.log (aim(7,10))


// array - []

// array - Массив бул квадратный скобка. Массивдин ичинде ар кандай нерселер болушу мумкун.
// Мисалы: number, 12232, string, 'text', boolean, true, false, {} - обьект, массивдин ичинде массив ж.б.
// Массив бул ар кандай типы данныхтагы элементтерди озуно камтып, сактап турат.
// Массивдин озунун кызмат аткарган меоттоддору бар.
// Алар: push(), pop(), unshift(), shift(), map(), reduce(), splice() ж.б.
// Массивде 0 дон баштап индекс менен санайт. Бекенддин данныйларынын баардыгы массив болуп келет.
// Массив озу типы данный боюнча обьектке кирет.

// [1] - индексти тушундурот.

// методдору

// push() - Элементти массивдин аягына кошот.
// shift() - Массивдин ичиндеги 1чи элементти очурот (удалтетет)
// unshift() - Элементти массивдин башына кошот.
// pop() - Массивдин ичиндеги акыркы элементти очурот(удалтетет)

// const arr = [123232,'text', true, [12,3,32]]
// console.log(arr)

// const arr = ['html', 'css', 'javascript']
// console.log(arr.push('react'))
// console.log(arr.shift())
// console.log(arr.pop())
// console.log(arr.unshift('html'))
// console.log(arr)


// 1  Дан массив ['a', 'b', 'c']. Добавьте ему в конец элементы 1, 2, 3.
// const arr = ['a', 'b', 'c']
// console.log(arr.push(1, 2, 3))
// console.log(arr)
// 2 Даны два массива: [1, 2, 3] и [4, 5, 6]. Объедините их вместе.
// const arr1 = [1,2,3]
// const arr2 = [4,5,6]
// console.log(arr1.push(arr2))
// console.log(arr1)
// 3 Дан массив [1, 2, 3]. Добавьте ему в конец элементы 4, 5, 6.
// const arr = [1,2,3]
// console.log(arr.push(4,5,6))
// console.log(arr)
// 4 Дан массив [1, 2, 3]. Добавьте ему в начало элементы 4, 5, 6.
// const arr = [1,2,3]
// console.log(arr.unshift(4,5,6))
// console.log(arr)
// 5 Дан массив ['js', 'css', 'jq']. Выведите на экран первый элемент.
//  const arr = ['js','css','jq']
//  console.log(arr[0])
// 6 Дан массив ['js', 'css', 'jq']. Выведите на экран последний элемент.
// const arr = ['js','css','jq']
// console.log(arr[2])

// const arr = ['js', 'css', 'jq',]
// console.log(arr[arr.length - 1])

// 7  Дан массив [1, 2, 3, 4, 5]. С помощью метода slice запишите в новый элементы [1, 2, 3].

// const arr = [1,2,3,4,5]
// console.log(arr.slice(0,3))

// 8  Дан массив [1, 2, 3, 4, 5]. С помощью метода slice запишите в новый элементы [4, 5].


// const arr = [1,2,3,4,5]
// console.log(arr.slice(3,5))


// 9  Дан массив [1, 2, 3, 4, 5]. С помощью метода splice преобразуйте массив в [1, 4, 5]
// const arr = [1,2,3,4,5]
// console.log(arr.splice(1,2))
// console.log(arr)
// 10  Дан массив [1, 2, 3, 4, 5]. С помощью метода splice запишите в новый массив элементы [2, 3, 4].
// const arr = [1,2,3,4,5]
// console.log(arr.splice(1, 3))
// console.log(arr)
// 11  Дан массив [1, 2, 3, 4, 5]. С помощью метода splice сделайте из него массив [1, 2, 3, 'a', 'b', 'c', 4, 5].
// const arr = [1,2,3,4,5]
// console.log(arr.splice(3,0,'a','b','c'))
// console.log(arr)
//12  Дан массив [1, 2, 3, 4, 5]. С помощью метода splice сделайте из него массив [1, 'a', 'b', 2, 3, 4, 'c', 5, 'e'].
// const arr = [1,2,3,4,5]
// console.log(arr.splice(1,0,'a','b'))
// console.log(arr)
// console.log(arr.splice(6,0,'c'))
// console.log(arr)
// console.log(arr.splice(8,9,'e'))
// console.log(arr)


// map () - меп методу жаны масивди создаватетип берет. бир нерсени (елементи) кайтрып берет
// жана жаны масивдин ичинде жаны чыгарып берет. мэп callback function,element,параметлерин
// кабыл алат. (примет) коп учурда элементи жана индексти кабыл алат.
// map () тин дагы озунун методтору бар. алар: Math.random(), Math.floor(), Math.squrt(), Math.round()
// коптогон методтору. ар бир метод ар башка кызмат аткарат.
// map() мотоду масивдин ар бир элементи учун корсотулгон функцияны
// чыкырунун натыйжасында жана масивди тузот


// Параметлери

// callback function - калбек функция () =>
// index учурдагы масивдин индекси
// element учурдагы масивдин элементи
// array учурдагы масив


// const numbers = [1, 2, 3, 4, 5]
// const squaredNumbers = numbers.map(function(number) {
//     return number * number
// })
// console.log(squaredNumbers)


// const numbers = [1, 2, 3, 4, 5]
// const squaredNumbers = numbers.map(number => number * number)
// console.log(squaredNumbers)


// const numbers = [1, 2, 3, 4, 5]
// const multipliedByIndex = numbers.map((number, index) => number * index)
// console.log(multipliedByIndex)

//мэп тин методтору
// Math floor() - калдык мн чыккан кичинеине толуктап берет
// калдыксыз чыгарып берет

// const arr = [1.5,2.4,5.5]
// console.log(arr.map(Math.floor))


// Math round() - калдык санда жогорусуна кичинесине жаккынына карап толуктап берет
// const arr = [1.5,7.3,2.5,5.3]
//console.log(arr.map(Math.round))

// Math random - ар турдуу рандомный кылып чыгарып берет
// connst arr = [ 1,2,3,4,5,6,7,8,9,10]
// console.log(arr.map(Math.random))

// Math sqrt - квадратный кореньди чыгарып берет

// const arr = [22,12,134,45]
// console.log(arr.map(Math.sqrt))


// 1. Вам дан массив с числами [5,15,315,2,13,20,9]. Найдите сумму этих чисел.

// const numbers = [5, 15, 315, 2, 13, 20, 9]
//  const squaredNumbers = numbers.map(function(number) {
//      return number + number
//  })
//  console.log(squaredNumbers)

//  2. Вам дан массив с числами [5,12,314,2,13,20,9]. Найдите сумму всех четных чисел.
// const arr = [5, 12, 314, 2, 13, 20, 9]
// const result = arr.map(el => {
//     if (el % 2 === 0) {
//         return el + el
//     } else {
//     return el
//     }
// })
// console.log(result)


// 3. Вам дан массив с числами [5,15,315,2,13,20,9]. Найдите сумму чисел, которые больше 10.
// const rra = [5,15,315,2,13,20,9]
// const result = rra.map(el => {
//     if (el > 10) {
//         return el + el
//     } else {
//         return el
//     }
//     })
// console.log(result)
// . Вам дан массив с числами [3,13,54,15,335, 39]. Найдите разность чисел, которые больше 10.
// const nvd = [3,13,54,15,335, 39]
// const result = nvd.map(el => {
//     if (el > 10) {
//         return el - el
//     } else {
//         return el
//     }
// })
// console.log(result)
// 5. Вам дан массив с строками ['Аскар', 'Баяман', 'Калмамат']. Сложите все строки и выведите длину результата.
// const arr5 = ['Аскар', 'Баяман', 'Калмамат']
// let String5 = ''
// for (let i = 0; i < arr5.length; i++) {
//     String5 += arr5[i]
// }
// console.log(String5.length)
// 6. Вам дан массив с строками ['Аскар', 'Баяман', 'Калмамат']. Выведите все строки в верхнем регистре, используя map.
// const arr6 = ['Аскар', 'Баяман', 'Калмамат']
// const result = arr6.map(el => {
//    return el.toUpperCase()
//   })
//   console.log(result)
// 7. Вам дан массив с строками ['Аскар', 'Баяман', 'Калмамат']. Выведите все вторые строки в верхнем регистре.
// const arr7 = ['Аскар', 'Баяман', 'Калмамат']
// const result = arr7.map((el,index) => {
//     if (index === 1) {
//         return el.toUpperCase()
//     } else {
//         return el
//     }
// })
// console.log(result)
// 8. Напишите функцию, которая принимает str, target. И возвращает true или false, если targer присутствует в str. Использовать .reduce для этого.
//     Пример: isPresent ('abcd', 'b') => true
// isPresent ('efghi', 'a') // => false****
// const str8 = 'abcd'
// const t8 = 'b'
// let t8 = false
// for (let i = 0; i < str8.length; i++) {
//     if (str8[i] === t8) {
//         t8 = true
//         break
//     }
// }
// console.log(t8)
// 9. Вам дан массив с строками ['асКар', 'бЯяман', 'калМмамат']. Используйте заглавные буквы в каждом массиве имен.
//     Пример: (["john", "JACOB", "jinGleHeimer", "schmidt"])), => ["John", "Jacob", "Jingleheimer", "Schmidt"]
// const arr9 = ['асКар', 'бЯяман', 'калМмамат']
// let Names9 = []
// for (let i = 0; i < arr9.length; i++) {
//     Names9.push(arr9[i][0].toUpperCase() + arr9[i].slice(1).toLowerCase())
// }
// console.log(Names9)
// // 10. Вам дан массив со строками ['Баяман', 'Калмамат']. Поменяйте местами первые буквы строк.
//   const arr10 = ['Баяман', 'Калмамат']
// const result = arr10.map(el => {
//     if (el.includes('Б')) {
//         return el = 'Каяман'
//     } else if (el.includes('К')) {
//         return el = 'Балмамат'
//     } else {
//         return el
//     }
// })
// console.log(result)
// 11. Вам дан массив [true, '1234', 325]. Напишите функцию, которая проверяет, все ли элементы массива относятся к одному типу данных.
// function sum (array) {
//     return array.map(el => {
//         if (typeof el === "boolean" || typeof el === "string" || typeof el === "number") {
//             return true
//         } else {
//             return false
//         }
//     })
// }
// console.log(sum([true, '1234', 325]))
// 12. Вам дана строка 'тестинг'. Ваша задача - вернуть средний символ слова. Если длина слова нечетная, верните средний символ. Если длина слова четная, вернуть 2 средних символа.

// 13. Вам дан массив с числами [5, -3, 13, -7, 45]. Верните сумму всех положительных чисел.
// const arr13 = [5, -3, 13, -7, 45]
// const result = arr13.map(el => {
//     if (el > 0) {
//         return el + el
//     } else {
//         return el
//     }
// })
// console.log(result)
// 14. Вам дан массив с числами [5, -54, 13, -7, 45, -15, -34]. Верните сумму всех отрицательных чисел, которые больше 10.
// const arr14 = [5, -54, 13, -7, 45, -15, -34]
// const result = arr14.map(el => {
//     if (el < -10) {
//         return el + el
//     } else {
//         return el
//     }
// })
// console.log(result)
// 15. Вам дан массив с числами [1, 65, 13 , 30, 100] - все числа - доллары. Вам нужно обменять эти доллары по курсу сома и вывести все числа в сомах.
// const arr15 = [1, 65, 13, 30, 100]
// const te15 = 84
// const som15 = arr15.map(dollar => dollar * te15)
// console.log(som15)
// 16. Вам дан массив со строками ['Lorem ipsum dor sit omet devour il ela sit']. Выведите каждый нечетный индекс в строке в верхнем регистре.
// const arr = ['Lorem ipsum dor sit omet devour il ela sit']
//  const result = arr.map(el => {
//   return el.slice(0, 19).toUpperCase() + el.slice(19, 35).toLowerCase() + el.slice(35).toUpperCase()
//  })
//  console.log(result)
// 17. Вам дан массив с строками ['Оскар', 'Баяман', 'Калмамат']. Добавьте к каждой строке нумерацию.
// const arr17 = ['Оскар', 'Баяман', 'Калмамат']
// const result = arr17.map((el,index) => {
//     return index + 1 + ('-') + el
// })
// console.log(result)
// 18. Вам дан массив с числами [2,456,6,8]. Напишите функцию , которая вставляет дефис (-) между каждыми двумя четными числами. Например, если вы принимаете 025468, на выходе должно быть 0-254-6-8.

// function insertDashBetweenEvens(numbers, index = 0, result = '') {
//  if (index >= numbers.length) {
//   return result
//  }
//  const numStr = numbers[index].toString()
//  if (parseInt(numStr) % 2 === 0) {
//   if (index !== 0 && parseInt(numbers[index - 1]) % 2 === 0) {
//    result += '-' + numStr
//   } else {
//    result += numStr
//   }
//  } else {
//   result += numStr
//  }
//  return insertDashBetweenEvens(numbers, index + 1, result)
// }
// const numbers = [0, 25, 4, 6, 8]
// const result = insertDashBetweenEvens(numbers)
// console.log(result)

// function sum (array) {
//     return array.map(el => {
//         if (el % 2 === 0) {
//             return el + ('-')
//         }else {
//             return el
//         }
//     })
// }
// console.log(sum([2,456,6,8]))
// 20. Вам дан массив с числами [5,15,315,2,13,20,9]. Посчитайте среднее арифметическое чисел в массиве.
// const arr20 = [5,15,315,2,13,20,9]
// const result12 = arr20.map(el => {
//     return el + el / 7
// })
// console.log(result12)
        // const arr = [1, 2, 3, 4, 6]
        // const result = arr.map(el => {
        //     if (el % 2 === 0) {
        //         return el
        //     } else {
        //         return el
        //     }
        // })
        // console.log(result)


// const arr = ['Abdualasisxanoglu']
// const result = arr.map(el => {
//     return el.slice(0,4).toUpperCase() + el.slice(4,10).toLowerCase() + el.slice(10).toUpperCase()
// })
// console.log(result)


// reduce
// reduce() - Масивдин  методу. Массивдин ичиндеги каждый (ар бир) элементтерди колдонуп берет.
//  Ар бир элементти бир-бирден озгортконго жардам берет.
//  Сол жактан он жакка карай окуп эсептеп, бир гана резултат чыгарат.
//  Редюстун дагы озунун параметрлери бар алар:
//  currentValue, accumulator, index, array, initialValue.
//  reduce дун ичине функция ачабыз. Мисалы callback функция.
//  Функция жок редюс иштебейт.
//  reduce() методу редуктор функцисын массивдин ар бир элементине
//  cолдон онго карай колдонот, натыйжада бир маанини кайтарат.
//  reduce методу торт аргументти алып боштуктарды кошпогондо, массивде бар ар бир элемент
//  учун кайра чакыруу функциясын бир жолу аткарат: баштапкы маани (жe мурунку кайра чалуудагы маани,)
//  учурдагы элементтин мааниси, индекс, жана итерациялоо учун массив.

// Параметлери
// accumulator - (акамулятор) - функцияны иштеткенге ток берет десек болот.
// масивдин ичиндеги биринчи элементке барабар болот.
// Акамулятор туура эмес эсептеп кошуу мумкун биз ага значение беришибиз керек
// Башка элементерди дагы биринчи элементке барабар кылып койот андай болбошучун:
// Башка нерсеге барабар кылып коюшубуз керек Акамулятордун функциясына
// утур (,) коюп масивке барабар кылышыбыз керек, масив мене иштеп атсак , number менен иштеп атксак 0
// string менен иштеп атсак ('') - тырмакча коюлат

// accumulator менен value кошо турган болсок жалпы сумма чыгат
// value (el - element) Масивдин ичиндеги ар бир элементти бирден акумуляторго кошуп чыгат
// бул жерде Finbanachi деген нерсе иштейт
// fibanachi = (1 + 2 + 3 + 4 + 5 + 6 + 7 + 8 + 9 + 10)
// finbanachi  логикасы рюдиста акумулятор менен value ну кошкондо журот

// currentValue - (el) - Учурдагы массивдин элементи
// index - Учурдагы массивдин индекси
// array - Учурдагы массив
// initialValue - Необязательный параметр (кошумча параметр)

// const arr = [1,2,3,4,5,6,7,8,9,10]
// console.log(arr.reduce((acc,value,index,array) => {
//     return acc
// }))

// const arr = [10,20,30,40,50,60,70,80,90,100]
// const result = arr.reduce((acc,el,idx,array) => {
//     return acc + el
// })
// console.log(result)

// const arr = [10,20,30,40,50,60,70,80,90,100]
// const result = arr.map(el => {
//     return el + el
// })
// console.log(result)


// const arr = [10,20,30,40,50,60,70,80,90,100]
// const calculateSum = (array) => {
//     return array.reduce((acc,value,idx,arr) => {
//         console.log("acc", acc)
//         console.log("value", value)
//         return acc + value
//     },0)
// }
// console.log(calculateSum(arr))


// const str = ['a', 'b', 'c', 'd']
// const calculateSum = (array) => {
//     return array.reduce((acc,el,idx,arr) => {
//         console.log("acc", acc)
//         console.log("el", el)
//         return acc + el
//     },'')
// }
// console.log(calculateSum(str))

// const arr = [23,4,5,6,7,87]
// const result = arr.reduce((acc,el) => {
//     return acc + el
// })
// console.log(result)

 // const names = ['Aijan', 'Bekbolot', 'Tima', 'Nurgul', 'Akylbek']
 // const result = names.reduce((acc,el,idx) => {
 //     if (idx % 2 !== 0) {
 //         acc.push(el.toUpperCase())
 //         return acc
 //     } else {
 //         acc.push(el.toLowerCase())
 //         return acc
 //     }
 // },[])
 // console.log(result)


// 1. Вам дан массив с числами [5,15,315,2,13,20,9]. Найдите сумму этих чисел.

// const arr = [5,15,315,2,13,20,9]
// const result = arr.reduce((acc,el) => {
//     return acc + el
// },0)
// console.log(result)

// 2. Вам дан массив с числами [5,12,314,2,13,20,9]. Найдите сумму всех четных чисел.

// const arr = [5,12,314,2,13,20,9]
// const result = arr.reduce((acc,el) => {
//     if (el % 2 === 0) {
//         return acc + el
//     } else {
//         return acc
//     }
// },0)
// console.log(result)

// 3. Вам дан массив с числами [5,15,315,2,13,20,9]. Найдите сумму чисел, которые больше 10.
// const arr = [5,15,315,2,13,20,9]
// const result = arr.reduce((acc,el) => {
//     if (el > 10) {
//         return acc + el
//         } else {
//         return acc
//     }
// },0)
// console.log(result)
// . Вам дан массив с числами [3,13,54,15,335, 39]. Найдите разность чисел, которые больше 10.
// const arr = [3,13,54,15,335, 39]
//  const result = arr.reduce((acc,el) => {
//      if (el > 10) {
//          return acc - el
//          } else {
//          return acc
//      }
//  },0)
//  console.log(result)
// 6. Вам дан массив с строками ['Аскар', 'Баяман', 'Калмамат']. Выведите все строки в верхнем регистре, используя map.
// const arr = ['Аскар', 'Баяман', 'Калмамат']
// const result = arr.reduce((acc,el,idx) => {
//     acc.push(el.toUpperCase())
//     return acc
// },[])
// console.log(result)
// 7. Вам дан массив с строками ['Аскар', 'Баяман', 'Калмамат']. Выведите все вторые строки в верхнем регистре.
// const names = ['Аскар', 'Баяман', 'Калмамат']
// const result = names.reduce((acc,el,idx) => {
//     if (idx % 2 !== 0) {
//         acc.push(el.toUpperCase())
//         return acc
//     } else {
//         acc.push(el.toLowerCase())
//         return acc
//     }
// },[])
// console.log(result)
// 8. Напишите функцию, которая принимает str, target. И возвращает true или false, если targer присутствует в str. Использовать .reduce для этого.
//     Пример: isPresent ('abcd', 'b') => true
// isPresent ('efghi', 'a') // => false

// 9. Вам дан массив с строками ['асКар', 'бАяман', 'калМмамат']. Используйте заглавные буквы в каждом массиве имен.
// const  names = ['асКар', 'бАяман', 'калМмамат']
// const result = names.reduce((acc,el) => {
//     return el.slice(0,1).toUpperCase() + el.slice(1).toLowerCase()
// },[])
// console.log(result)
//     Пример: (["john", "JACOB", "jinGleHeimer", "schmidt"])), => ["John", "Jacob", "Jingleheimer", "Schmidt"]
// 10. Вам дан массив со строками ['Баяман', 'Калмамат']. Поменяйте местами первые буквы строк.
// const arr10 = ['Баяман', 'Калмамат']
//  const result = arr10.reduce((el,acc) => {
//      if (el.includes('Б')) {
//          return acc = 'Каяман'
//      } else if (el.in('К')) {
//          return acc = 'Балмамат'
//      } else {
//         return acc
//      }
//  },)
//  console.log(result)
// // 13. Вам дан массив с числами [5, -3, 13, -7, 45]. Верните сумму всех положительных чисел.
// const arr = [5, -3, 13, -7, 45]
// const result = arr.reduce((el,acc) => {
//     if (el > 0) {
//         return acc + el
//     } else {
//         return acc
//     }
// },0)
// console.log(result)
// 14. Вам дан массив с числами [5, -54, 13, -7, 45, -15, -34]. Верните сумму всех отрицательных чисел, которые больше 10.
// const arr = [5, -54, 13, -7, 45, -15, -34]
// const result = arr.reduce((el,acc) => {
//      if (el > -10) {
//          return acc + el
//      } else {
//          return acc
//      }
//  },0)
//  console.log(result)
// 15. Вам дан массив с числами [1, 65, 13 , 30, 100] - все числа - доллары. Вам нужно обменять эти доллары по курсу сома и вывести все числа в сомах.
// const arr15 = [1, 65, 13, 30, 100]
//  const te15 = 84
//  const som15 = arr15.reduce((acc,el) => {
//   return acc + el * te15
//  })
//  console.log(som15)
// 16. Вам дан массив со строками ['Lorem ipsum dor sit omet devour il ela sit']. Выведите каждый нечетный индекс в строке в верхнем регистре.
// const names = ['Lorem ipsum dor sit omet devour il ela sit']
// const result = names.reduce((acc,el,idx) => {
//     return el.slice(0, 19).toUpperCase() + el.slice(19, 35).toLowerCase() + el.slice(35).toUpperCase()
//  },[])
//  console.log(result)
// 17. Вам дан массив с строками ['Оскар', 'Баяман', 'Калмамат']. Добавьте к каждой строке нумерацию.
// const arr17 = ['Оскар', 'Баяман', 'Калмамат']
// const result = arr17.reduce((acc,el,idx) => {
//  return acc + idx + ('-') + el
// },'')
// console.log(result)
// 18. Вам дан массив с числами [2,456,6,8]. Напишите функцию , которая вставляет дефис (-) между каждыми двумя четными числами. Например, если вы принимаете 025468, на выходе должно быть 0-254-6-8.
// 20. Вам дан массив с числами [5,15,315,2,13,20,9]. Посчитайте среднее арифметическое чисел в массиве.
// const arr20 = [5,15,315,2,13,20,9]
// const allsumnum = arr20.reduce((acc,el) => {
//  return acc + el
// })
// console.log(allsumnum / arr20.length)

// Object - Обьект - {}

// Object {} Беккендин даныйлары обьект болуп килет String тер ковычка тырмакчалар
// ("",'',``) менен number сан менен, масив [] менен. Ал эми обьект бул фигурный скобка - {} ичинде коп нерселер болот
// сактап турат Обьектин ичинде number string boolean (true,false) обьектин ичинде масив обьектин ичинде обьект дагы болушу мумкун
// Обьектин ичинде бэкэнддин даныйлары дагы болот, ключ жана значение. Аты сап жана символ болушу мумкун, ал эми маниси калаган нерсе болушу мумкун
// Обьектер javascriptтин бары жеринде озгочо малыматты сакто учун колдонулат
// Обьектер javascriptтин озгочо туру калаган турлорду примитивду деп аталат анткени примитивду термендин манилери сап же сан сыякту гана манилер болушу мумкун
// Обьектер колекцияларды же татаал структуларды сактайт  Обьектер тармал кашалардын жардамы менен тузулушу мумкун {...} касиеттердин кошуча тизмеси
// Кыймыл бул мааниси ачкыч жуп мында ачкыч саап жанга мани бардык нерсе болушу мумкун Мисалы бир нерсени бейсболка менен салыштырып королу анын тусу формасы салмагы
// Материалы жана башкка бар Ошондой эле javascriptтин обьекти анын муноздомолорун аныктаган касиетерди камтыйт


// Обьектин методтору

// delete удалитетип берет
// Object.freeze() тондуруп коет
// Object.keys() ключтарга карылат
// Object.values() Значенияларга манилерге иштеп берет
// Object.enterice() Обьектердин барын масивтерге айлантырып салат
// Object.assing() Копироватетип берет жаны обьекти кайтарып берет

// let obj = {
//     name: 'Syimyk',
//     job: 'Mentor proggramming',
//     tell: '0702256437',
//     hobby: {
//         books: ['phyton', 'javascript'],
//         sport: ['football', 'basketball'],
//     },
//     address: 'sverdlovskiy',
//     house: '31',
//     city: 'Bishkek',
//     saiHi: function () {
//         return 'salam'
//     },
//     'spoken language': {
//         kyrgyz: 'native',
//         russian: 'second language',
//         english: 'so so'
//     }
// }

// console.log(obj)
// console.log(obj.name)
// console.log(obj.name.length)
// console.log(obj['spoken language'].kyrgyz)
// console.log(obj.saiHi())
// console.log(obj.hobby.books[1])


// Object.freeze(obj)
// delete obj.name
// delete obj.tell
// console.log(obj)


// console.log(Object.keys(obj).length)
// console.log(obj)

// console.log(Object.keys(obj).map(key => {
//     return [key]
// }))


// console.log(Object.values(obj))
// console.log(obj)

// console.log(Object.entries(obj))


// let player = {
//     name: 'Ronaldo',
//     age: 34,
//     car: 'Bugatti'
// }
//
// let player2 = {
//     name: 'Messi',
//     age: 32,
//     money: '100 mill'
// }
//
// let player3 = {
//     name: 'Neymar',
//     age: 24,
// }
//
// let copy = Object.assign({}, player3, player2, player)
// console.log(copy)

// let player1 = {
//     name: 'Luis Figo',
//     age: 34,
//     car: 'Bugatti'
// }
//
// let player2 = {
//     name: 'Maradonna',
//     age: 32,
//     money: '100 mill'
// }
//
// let player3 = {
//     name: 'Ronaldo9',
//     age: 24
// }
// let players = [player1, player2, player3];
// let young = players.filter(player => player.age < 30);
// console.log(young)

// let player1 = {
//     name: 'Luis Figo',
//     age: 34,
//     car: 'Bugatti'
// }
//
// let player2 = {
//     name: 'Maradonna',
//     age: 32,
//     money: '100 mill'
// }
//
// let player3 = {
//     name: 'Ronaldo9',
//     age: 24
// }
// if (player2.name === 'Maradonna') {
//     player2.name = 'Leonel Messi';
// } else {
//     console.log('Diego Maradonna');
// }
//
// console.log(player2)


// for -() Бул цикл  цикл бул каталанвп кеткен нерселер
// Мисалы саат 12 кайра келе жатат  бир нерсенин циклы
// Wsrklsy  for -(), while - (), do while -() деген турлору бар
// кобунчо for колдонулат цикл менен мисалы бир действие аткарыш учун
// биз аны кайтала жаза беребиско результатын чыгарыш учун
// Бир элемменти html 4 блоко 4 див ачабыз
// Ал эми цикл 1 див ачып 4 кобойто коебуз
// Башкача айтканда бир элемент менен бир нерсе менен озубуз калагандай кобойтоо алсак болот
// for дун ичине переменый ачылат (let) for (let i = 0; i <= 10; i++)
// i индекстин кыскарытылып жазышы. ++ - (инкремент) бирдей кошулуп кете бериш учун
// I индекс менен санап берет Мисалы 10го цифра чыгара турган болсок анда 1 баштайбыз
// чон же барабар кылсак бул биз корсоткон жака чейн чыргарып берет Циклдер бул нерсенин кайталануу жолу
// циклдердин туру бар бирок алар бир нерсени аткарышат алар кайдайдыр бир аракетти бир нече жолу кайталышат
// Сценарийди жатып жазканда бир эле иш аракетти коп жолу жасоо милдети пайда болот мисалы тизмедеги омумдордогу бир бирден корсотунуз
// же бирден онго чейнуи бардык сандарды чыгарып ар бири учун бирдей колду иштетиниз
// колдун бир болугун бир нече жолу кайталоо учун циклдер берилет
// For цикли циклди токтотуунун кандайдыр бир озгочо окуясы болгонго чейн аракетти кайталайт
// болунгон уч кошумча туюнтмадан турган циклди тузот андан кийн уиклге аткарылатурган оператор


// for (let i = 0; i <= 10; i++) {
//      console.log(i)
// }

// break - Остонавливает функцию Токтотуп берет бекендинданыйлары
// коп болуп ноутбугубуз уоторо албай калышы мумкун  биз керектуусун гана алып калабыз
// мисалы 20 сы эле цикл менен break кылып токтотуп койсо болот break оператору учурдагы циклдин бир нече
// тандоскоторуштурру операторунун же эн билгиси  бар блок туюнтмасынын аткарылышынын узгултуко учурату учун break
//  операторун колдоно аласыз Бул учурда узуу 


// 1. Выведите столбец чисел от 1 до 50.
// for (let i = 1; i <= 50; i++) {
//     console.log(i);
// }
// 2. Создайте переменную с пустым массивом, заполните массив 10-ю элементами X с помощью цикла.
// let arr3 = []
// for (let i = 0; i < 10; i++) {
//     arr3.push('X')
// }
// console.log(arr3)
// 3. Вам дан массив с элементами [5, 3, 1, 2, 7]. С помощью цикла for выведите все эти элементы в консоль.
// let arr2 = [5, 3, 1, 2, 7]
// for (let i = 0; i < arr2.length; i++) {
//     console.log(arr2[i])
// }
// 4. Вам дан массив с элементами [5, 2, 1, 2]. С помощью цикла for найдите произведение элементов этого массива.
//   let arr21 = [5, 2, 1, 2]
// let product = 1
// for (let i = 0; i < arr21.length; i++) {
//     product *= arr21[i]
// }
// console.log(product)
// 5. Выведите в консоль столбец четных чисел в промежутке от 0 до 100.
// for (let i = 0; i <= 100; i += 2) {
//     console.log(i);
// }
// 6. С помощью цикла найдите сумму чисел от 1 до 100 и выведите в консоль.
// let sum = 0
// for (let i = 1; i <= 100; i++) {
//     sum += i
// }
// console.log(sum)
// 7. Вам дан массив с элементами [2, 4, 5, 6, 8]. С помощью цикла for найдите сумму элементов этого массива. Запишите ее в переменную result.
// let arr22 = [2, 4, 5, 6, 8]
// let result = 0
// for (let i = 0; i < arr22.length; i++) {
//     result += arr22[i]
// }
// console.log(result)
// 8. Вам дан массив [3, 4, 6, 12, 3, 5]. С помощью цикла for и оператора if выведите на экран столбец тех элементов массива, которые больше 3-х, но меньше 10.
// let arr23 = [3, 4, 6, 12, 3, 5]
// for (let i = 0; i < arr23.length; i++) {
//     if (arr23[i] > 3 && arr23[i] < 10) {
//         console.log(arr23[i])
//     }
// }
// 9. Вам дан массив с числами. Числа могут быть положительными и отрицательными. Найдите сумму положительных элементов массива.
// let arr25 = [3, -5, 8, -2, 10, -1]
// let sumPositive = 0
// for (let i = 0; i < arr25.length; i++) {
//     if (arr25[i] > 0) {
//         sumPositive += arr25[i]
//     }
// }
// console.log(sumPositive)
// 10. Вам дан массив с числами [5, 1, 3, 7, 6, 15, 3, 20]. С помощью цикла for и оператора if проверьте есть ли в массиве элемент со значением, равным 4. Если есть - выведите на экран 'Есть!' и выйдите из цикла. Если нет - ничего делать не надо.
// let arr24 = [5, 1, 3, 7, 6, 15, 3, 20]
// for (let i = 0; i < arr24.length; i++) {
//     if (arr24[i] === 4) {
//         console.log('Есть!')
//         break;
//     }
// }
// 11. Вам дан массив числами [10, 20, 30, 40, 135, 2000]. Выведите на экран только те числа из массива, которые начинаются на цифру 1, 2 или 5.
// let arr27 = [10, 20, 30, 40, 135, 2000]
// for (let i = 0; i < arr27.length; i++) {
//     if (arr27[i] === 1,2,5) {
//         console.log(10,20,2000)
//         break
//     }
// }
// 12. Вам дан массив с элементами [1, 2, 3, 4, 5, 6, 7, 8, 9]. С помощью цикла for создайте строку '-1-2-3-4-5-6-7-8-9-'.
// let arr28 = [1, 2, 3, 4, 5, 6, 7, 8, 9]
// let result = ''
// for (let i = 0; i < arr28.length; i++) {
//     result += '-' + arr28[i]
// }
// result += '-'
// console.log(result)
// 13. Вам дано число n=1000. Делите его на 2 столько раз, пока результат деления не станет меньше 50. Какое число получится? Посчитайте количество итераций, необходимых для этого (итерация - это проход цикла), и запишите его в переменную num.
// Инициализация переменных
// let n = 1000
// let num = 0
// for (; n >= 50; num++) {
//     n = n / 2
// }
// console.log(n)
// console.log(num)

// 14. Вам дан массив с числами [1, 2, 3, 7, 6, 9]. Найдит// Инициализация переменной n
// let array = [1, 2, 3, 7, 6, 9]
// let max = array[0]
// for (let i = 1; i < array.length; i++) {
//     if (array[i] > max) {
//         max = array[i]
//     }
// }
// console.log(max)
// 15. Вам дан массив с числами [1, 2, 3, 4, 5]. С помощью цикла найдите сумму квадратов элементов этого массива.
// let array = [1, 2, 3, 4, 5]
// let sum = 0
// for (let i = 0; i < array.length; i++) {
//     sum += array[i] * array[i]
// }
// console.log(sum)
// 16. Вам дан массив с числами [1, 2, 4, -1, -3, 8, 7, 0, -5, 18, 12]. С помощью цикла выведите только те элементы массива, которые больше нуля и меньше 10-ти.
// let arr31 = [1, 2, 4, -1, -3, 8, 7, 0, -5, 18, 12]
// for (let i = 0; i <arr31.length; i++) {
//     if (arr31[i] > 0 && arr31[i] < 10) {
//         console.log(arr31[i])
//     }
// }

// 17. Создайте переменную с пустым массивом, заполните массив 10-ю случайными числами от 1 до 10 с помощью цикла.
// let numbers = []
// for (let i = 0; i < 10; i++) {
//     let randomNumber = Math.floor(Math.random() * 10) + 1
//     numbers.push(randomNumber)
// }
// console.log(numbers)

// 18. Создайте цикл, который суммирует числа, кратные 3 и 5 до 1000.
// let arr = []
// 19. Вам дан массив [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21].Создайте цикл, который выводит нечетные числа, которые больше 10.
// 20. Вам дана строка 'jzvzszrzpz'. Измените каждую вторую букву на верхний регистр.






